/**

Given an array of integers, find out whether there are two distinct indices i and j in the array such that the difference between nums[i] and nums[j] is at most t and the difference between i and j is at most k.

*/

public class Solution {
    public boolean containsNearbyAlmostDuplicate(int[] nums, int k, int t) {
        if (nums == null || k < 0 || nums.length == 0) return false;
        TreeSet<Integer> values = new TreeSet<Integer>();
        for (int ind = 0; ind < nums.length; ind++) {
            Integer floor = values.floor(nums[ind] + t);
            Integer ceil = values.ceiling(nums[ind] - t);
             if ((floor != null && floor >= nums[ind]) || (ceil != null && ceil <= nums[ind])) return true;
            values.add(nums[ind]);
            if (ind >= k) values.remove(nums[ind - k]);
        }
        return false;
    }
}
