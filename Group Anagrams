/*

Given an array of strings, group anagrams together.

For example, given: ["eat", "tea", "tan", "ate", "nat", "bat"], 
Return:

[
  ["ate", "eat","tea"],
  ["nat","tan"],
  ["bat"]
]
Note:
For the return value, each inner list's elements must follow the lexicographic order.
All inputs will be in lower-case.

*/

// Typical hashmap problem

public class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        List<List<String>> result = new ArrayList<>();
        Map<String, List<String>> dict = new HashMap<String, List<String>>();
        for (String str : strs) {
            char[] array = str.toCharArray();
            Arrays.sort(array);
            String key = String.valueOf(array);
            if (!dict.containsKey(key)) {
                List<String> l = new ArrayList<String>();
                l.add(str);
                dict.put(key, l);
            } else {
                dict.get(key).add(str);
            }
        }
        for (String key : dict.keySet()) {
            List<String> r = dict.get(key);
            Collections.sort(r);
            result.add(r);
        }
        return result;
    }
}
