/**

Given a string, find the length of the longest substring T that contains at most k distinct characters.

For example, Given s = “eceba” and k = 2,

T is "ece" which its length is 3.

*/

public class Solution {
    public int lengthOfLongestSubstringKDistinct(String s, int k) {
        int[] map = new int[256];
        int begin = 0, end = 0, counter = 0;
        int distance = 0;
        while (end < s.length()) {
            if (map[s.charAt(end++)]++ == 0) counter++;
            while (counter > k) {
                if (map[s.charAt(begin++)]-- == 1) counter--;
            }
            distance = Math.max(distance, end - begin);
        }
        return distance;
    }
}
