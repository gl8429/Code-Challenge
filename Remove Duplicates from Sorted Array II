/*
Follow up for "Remove Duplicates":
What if duplicates are allowed at most twice?

For example,
Given sorted array nums = [1,1,1,2,2,3],

Your function should return length = 5, with the first five elements of nums being 1, 1, 2, 2 and 3. It doesn't matter what you leave beyond the new length.
*/

public class Solution {
    public int removeDuplicates(int[] nums) {
        if (nums == null || nums.length == 0) return 0;
        int i = 1, j = 0, count = 0;
        while (i < nums.length) {
	    // if found same number, begin to count
            if (nums[i] == nums[j]) {
                count++;
		// if found twice, move j's pointer
                if (count == 1) {
                    j++;
                    nums[j] = nums[j - 1];
                }
            // otherwise, move j's pointer
            } else {
                nums[++j] = nums[i];
                count =0;
            }
            i++;
        }
        return j + 1;
    }
}
