int binarySearchFirst(int[] A, int target) {
    Arrays.sort(A);
    int low = 0, high = A.length - 1, result = -1;
    while (low <= high) {
        int mid = low + (high - low) / 2;
        if (target == A[mid]) {
            result = mid, high = mid - 1;
        } else if (target < A[mid]) {
            high = mid - 1;
        } else {
            low = mid + 1;
        }
    }
    return result;
}

int binarySearchLast(int[] A, int target) {
    Arrays.sort(A);
    int low = 0, high = A.length - 1, result = -1;
    while (low <= high) {
        int mid = low + (high - low) / 2;
        if (target == A[mid]) {
            result = mid, low = mid + 1;
        } else if (target < A[mid]) {
            high = mid - 1;
        } else {
            low = mid + 1;
        }
    }
    return result;
}
