/**

Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.

    For example, given array S = {-1 2 1 -4}, and target = 1.

    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).

*/

// O(n^2)

public class Solution {
    public int threeSumClosest(int[] nums, int target) {
        if (nums.length < 3) return -1;
        Arrays.sort(nums);
        int distance = Integer.MAX_VALUE;
        int res = 0;
        for (int i = 0; i < nums.length - 2; ++i) {
            int start = i + 1, end = nums.length - 1;
            while (start < end) {
                int tmp = nums[i] + nums[start] + nums[end];
                if (Math.abs(target - tmp) < distance) {
                    distance = Math.abs(target - tmp);
                    res = tmp;
                }
                if (tmp == target) return tmp;
                else if (tmp > target) end--;
                else start++;
            }
            
        }
        return res;
    }
}
