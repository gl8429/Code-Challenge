/*

The count-and-say sequence is the sequence of integers beginning as follows:
1, 11, 21, 1211, 111221, ...

1 is read off as "one 1" or 11.
11 is read off as "two 1s" or 21.
21 is read off as "one 2, then one 1" or 1211.
Given an integer n, generate the nth sequence.

Note: The sequence of integers will be represented as a string.

*/

// Simple problem to operate string

public class Solution {
    public String countAndSay(int n) {
        if (n <= 0) return "";
        String cur = "1";
        for (int i = 0; i < n - 1; ++i) {
            String tmp = countAndSay(cur);
            cur = tmp;
        }
        return cur;
    }
    
    public String countAndSay(String number) {
        StringBuilder sb = new StringBuilder();
        int pos = 0;
        while (pos < number.length()) {
            char cur = number.charAt(pos);
            int count = 0;
            while (pos < number.length() && number.charAt(pos) == cur) {
                count++;
                pos++;
            }
            sb.append(count + "" + cur);
        }
        return sb.toString();
    }
}
